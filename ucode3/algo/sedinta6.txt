concluzii sedinta 6:
1. se poate folosii operatorul ternal la if else: return (a>b) ? a: b;
2. nu e necesara ramura de else daca e indeplinita prima conditie
if(a>b) return a;
return b;

se observa ca nu e else.

3. negatia: 
const toggle1 = (a) => 1-a;
const toggle2 = (a) => !a;

ambele sunt corecte

4. recursivitate:
	cerita: suma unui sir de numere!
	function suma(arr) {
	debugger;
	if(!arr.length) {
		return 0;
	}
	
	const newArr =arr.slice(1);
	return arr[0] + suma(newArr);

	}


	!!!  orice functie recursiva se incepe cu criteriu de stopare a executiei acesteia


suma unui sir de numere - exemple de rezolvari.

1. use variable named sum and add the value of every number from array by using a for syntax. 
function total(arr) {
 if(!Array.isArray(arr)) return;
 let totalNumber = 0;
 for (let i=0,l=arr.length; i<l; i++) {
 totalNumber+=arr[i];
 }
 return totalNumber;
}


2. function total(arr) {
 if(!Array.isArray(arr)) return;
 let totalNumber = 0, i=-1;
 while (++i < arr.length) {
 totalNumber+=arr[i];
 }
 return totalNumber;
}

3. varianta cu for
4.var sum = a.reduce(function(a, b) { return a + b; }, 0);
5.function sumArray(arr) {
 var total = 0;
 arr.forEach(function(element){
 total += element;
 })
 return total;
}

var sum = sumArray([1,2,3,4])

console.log(sum)

6.var sum = 0;
arr.map(function(item){
 sum += item;
});

7.
var sum = (arr) => arr.length === 1 ? arr[0] : arr.shift() + sum(arr);
sum([1,2,3,4])

8.Array.prototype.sum = function(){
 var sum = 0;
 this.map(function(item){
 sum += item;
 });
 return sum;
}

9. function suma(arr) {
	debugger;
	if(!arr.length) {
		return 0;
	}
	
	const newArr =arr.slice(1);
	return arr[0] + suma(newArr);

}



maximul unui numar folosind prototype:
Array.prototype.myMax = function() {
	const arr = this;
	let max = arr[0];
	for(let i=1;i<arr.length;i++) {
		if(arr[i]>max) {
			max = arr[i];
		}
	}
	return max;
}
[1,2,6].myMax() ==> 6





schimbare de valori:
var a = 1, b = 2;

// ES5 swap
var temp = a;
a = b;
b = temp;

// a = 2, b = 1

// ES6 swap back
[a, b] = [b, a];

// a = 1, b = 2

https://www.sitepoint.com/es6-destructuring-assignment/




site-uri de algoritmica:

https://www.hackerrank.com
https://leetcode.com
https://codility.com
https://codewars.com
https://coderbyte.com