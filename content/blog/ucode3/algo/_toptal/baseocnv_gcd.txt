// Installed npm packages: jquery underscore request express
// jade shelljs passport http sys lodash async mocha chai sinon
// sinon-chai moment connect validator restify ejs ws co when
// helmet wrench brain mustache should backbone forever debug

var _ = require('underscore');

var evens = _.reject([1, 2, 3, 4, 5, 6], function(num){ return num % 2 != 0; });

// console.log("Evens");
// console.log(evens);

function baseConv(n,base)
{
    if(n<base)
        {
            return n;
        }
    var rez = [];
    while(base<=n)
        {
            rez.push(n%base);
            n=n/base>>0;
            
        }
    rez.push(n);
    //console.log(rez);
    return rez.reverse();
}

function to10(arr)
{
    
    var rez = 0;
    for(var i=0;i<arr.length;i++)
        {
            if(arr[i] ==0)
                {
                    continue;
                }
            var x = arr.length-i-1;
            var mul = 1;
            for(var j=0;j<x;j++)
                {
                    mul = 2*mul;
                }
            rez += mul;
        }
    //console.log(rez);
    return rez;
}

function gcd_two_numbers(x, y) {
  if ((typeof x !== 'number') || (typeof y !== 'number')) 
    return false;
  x = Math.abs(x);
  y = Math.abs(y);
  while(y) {
    var t = y;
    y = x % y;
    x = t;
  }
  return x;
}


function process(n)
{
    //var n = 77;
var r1 = baseConv(n,2);
console.log(r1);

for(var i=0;i<r1.length;i++)
    {
        r1.push(r1.shift());
        var s  = to10(r1);
console.log(s);

var g = gcd_two_numbers(n,s);
console.log(g);
        console.log("----------------------");
    }

   
}
function overlappingSegment(A, B) {
        // write your code in Java SE 8
debugger;
        if(A.length == 0 || B.length == 0) return 0;
        var count = 1;
        var lastIndex = 0;

        for(var i=1; i< B.length; i++){
            if(A[i]<= B[lastIndex]) continue;
            lastIndex = i;
            count++;
        }
        return count;
    }



//process(21);
var xxxx = overlappingSegment([1,3,7,9,9],[5,6,8,9,10]);
console.log(xxxx);
