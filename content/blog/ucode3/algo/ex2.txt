1.sa se scrie o functie cu 2 parametrii  a si b si returneaza adevarat daca a < b


function micMare(a,b){
if a<b;
return a
}
return b
}

2. Sa se scrie o fct care returneaza inversul unei valori booleane. True returneaza false. 1 returneaza 0


const toggle = (a) => 1-a;
const toggle1=(a) => !a;

3. Sa se calculeze suma unui sir de numere. Am facut la curs


function suma(sir); {
let suma=0;
for(i=0,i<=n,i++)
suma = +sir[i];
return suma;
}

31!!! ar trebuii sa fie printre primele: sa se returneze numerele mai mici decat n sarind din pas in pas. exemplu: 20, 5 ==> [0, 5 , 10, 15, 20] 

function numereCuPas(n, pas) {
    
const result = [];
    
let nrCurent = 0;
    
while(nrCurent <= n) {
        
result.push(nrCurent);
        
nrCurent += pas++;
    }

    
return result;

}

4. Sa se determine numarul maxim dintr-un array


function micMare(a,b){
return a>b? a:b;
}
----------------------------------------
function max(arr){

let max=0;

for(i=0, i<arr.length,i++){

if(arr[i]>max)

max=arr[i]; 
}

return max;

}
-----------------------------------------------------
myMax = function() {
    
const arr = this;
    
let max = arr[0];
    
for(let i=1;i<arr.length;i++) {
       
if(arr[i]>max) {
            
max = arr[i];
        
}
    
}
    
return max;

}

5. Sa se calculeze suma numerelor impare dintr-un array

function mySum(arr){

let suma1 = 0;
	
for(let i = 0; i < arr.length; i++){

if(arr[i]%2===1){

suma1 = suma1 + arr[i];}
    
}
return suma1;

}
 

6. Sa se calculeze diferenta dintre suma numerelor pare si suma numerelor impare


function dif(){
function mySum(arr){

let suma1 = 0;

let suma2 = 0;	
for(let i = 0; i < arr.length; i++){

if(arr[i]%2===1){

suma1 = suma1 + arr[i];    
}
return suma1;

}
 
for(let j = 0; j<arr.length; j++){
if(arr[j]%2==0){
suma2 = suma2 + arr[j]; }
return suma2; }
dif()=suma1 - suma2;
return dif(); }

7. Sa se scrie un algoritm care returneaza daca un nr este prim


function isPrime(num) {
  for(var i = 2; i < num; i++)
    if(num % i === 0) return false;
  return num > 1;
}
----------------------------------------------------------
function prime(num){
 if(num == 1) return true;
 var t = num / 2;
 var k = 2;
 while(k <= t) {
   if(num % k == 0) {
      return false
   } else {
   k++;  
  }
 }
  return true;
}

8. Sa se returneze pozitia celui mai mare nr dintr-un array


myMax = function(arr) {
    
let max = arr[0];
	
let posit=0;
    
for(let i=0;i<arr.length;i++) {
       
 if(arr[i]>max) {
           
max = arr[i];
			
posit= i;
        
}
    
}
    
return posit;

}


9. Sa se inverseze intr-un array primul element cu ultimul


function swap(arr){
    
let e=arr[0];
	
arr[0]=arr[arr.length - 1];
	
arr[arr.length - 1]=e;

return arr

}


10. Sa se scrie un algoritm care returneaza numarul maxim de numere consecutive





11.sa se inverseze un string

function reverseString(str) {
    // Step 1. Use the split() method to return a new array
    var splitString = str.split(""); // var splitString = "hello".split("");
    // ["h", "e", "l", "l", "o"]
 
    // Step 2. Use the reverse() method to reverse the new created array
    var reverseArray = splitString.reverse(); // var reverseArray = ["h", "e", "l", "l", "o"].reverse();
    // ["o", "l", "l", "e", "h"]
 
    // Step 3. Use the join() method to join all elements of the array into a string
    var joinArray = reverseArray.join(""); // var joinArray = ["o", "l", "l", "e", "h"].join("");
    // "olleh"
    
    //Step 4. Return the reversed string
    return joinArray; // "olleh"
}


12. Sa se determine daca un string e a fel si daca se citeste de la sfarsit



13. Sa se scrie o fct care capitalizeaza prima litera. Ex. ana devine Ana



14. Se da un obiect. Sa se returneze doar cheile obiectului
OPbject.keys  si as se vedea Object.values


15. Sa se returneze primul element care se repeta dintr-un array





16. Sa se calculeze n factorial


function factorialize(num) {
  // If the number is less than 0, reject it.
  if (num < 0) 
        return -1;
    
  // If the number is 0, its factorial is 1.
  else if (num == 0) 
      return 1;
    
  // Otherwise, call the recursive procedure again
    else {
        return (num * factorialize(num - 1));
}
}
-----------------------------------------------------------------------------
function factorialize(num) {
  // Step 1. Create a variable result to store num
  var result = num;
   
  // If num = 0 OR num = 1, the factorial will return 1
  if (num === 0 || num === 1) 
    return 1; 
 
  // Step 2. Create the WHILE loop 
  while (num > 1) { 
    num--; // decrementation by 1 at each iteration
    result = result * num; 
return result; 
}
------------------------------------------------------------------------------
function factorialize(num) {
  if (num === 0 || num === 1)
    return 1;
  for (var i = num - 1; i >= 1; i--) {
    num *= i;
  }
  return num;
}

17. Sa se calculeze suma numerelor de la 1 la n



18. Sa se sorteze in fct de varsta o lista de persoane
 search for javascript sort objects


19. Sa se stearga numerele pare dintr-un array


function removeEven(arr, invert = false) {
    
for (let i = 0; i < arr.length; ++i) {
        
const even = arr[i] % 2 === 0
        
if (even ^ invert) {
            
arr.splice(i--, 1)
       
}
    
}
}


20. Sa se creeze matricea cu tabla inmultirii pana la n

function matriceaNumerelor(n){
	var matrix = [];
	for(let i=0;i<n;i++) {
		matrix[i] = [];
		for(let j=0;i<n;i++) {
			matrix[i],[j] = (i+1)*(j+1);
}
}
return matrix;
}

21.  Sa se defineasca structura de directoare si sa se tipareasca fiecare director




22. Sa se roteasca un array de n ori



23. Sa se corecteze un string. Doua puncte consecutive sa ramana 1 punct



24. Sa se capitalizeze fiecare litera dupa punct dintr-o fraza



25. Sa se defineasca un arbore binar. Inca nu am facut

26. Sa se pastreze intr-o variabila zilele selectate dintr-o saptamana



27. Sa se verifice daca o expresie este scrisa corect. Ex. (4+++3))[

28. sa se defineasca un obiect raft care scrie produsul in consola in loc sa-l adauge in lista de rafturi



29. sa se execute o functie dupa un anumit timp



30.  sa se execute o functie de n ori la un anumit interval